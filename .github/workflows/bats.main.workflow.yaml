jobs:
  build:
    name: Build
    needs:
      - Lint
    outputs:
      digest: "${{ steps.docker_meta.outputs.version }}"
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - id: docker_meta
        uses: "crazy-max/ghaction-docker-meta@2e1a5c7fa42123697f82d479b551a1bbdb1bef88"
        with:
          images: ghcr.io/socialgouv/docker/bats
          labels: |
            org.opencontainers.image.title=bats
            org.opencontainers.image.documentation=https://github.com/SocialGouv/docker/tree/${{ github.sha }}/bats
          tags: |
            type=sha
            type=raw,value=sha-${{ github.sha }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - id: docker_buildx
        name: Set up Docker Buildx
        uses: "docker/setup-buildx-action@2a4b53665e15ce7d7049afb11ff1f70ff1610609"
        with: {}
      - if: "${{ github.event_name != 'pull_request' }}"
        name: Login to ghcr.io/socialgouv Registry
        uses: "docker/login-action@f3364599c6aa293cdc2b8391b1b56d0c30e45c8a"
        with:
          password: "${{ secrets.GHCR_REGISTRY_TOKEN }}"
          registry: ghcr.io
          username: "${{ secrets.SOCIALGROOVYBOT_NAME }}"
      - name: /tmp/.buildx-cache cache
        uses: "actions/cache@v2"
        with:
          key: "${{ runner.os }}-buildx-${{ hashFiles('bats/Dockerfile') }}"
          path: /tmp/.buildx-cache
          restore-keys: |
            ${{ runner.os }}-buildx-
      - id: docker_push
        name: Push
        uses: "docker/build-push-action@e1b7f96249f2e4c8e4ac1519b9608c0d48944a1f"
        with:
          builder: "${{ steps.docker_buildx.outputs.name }}"
          cache-from: "type=local,src=/tmp/.buildx-cache"
          cache-to: "type=local,dest=/tmp/.buildx-cache"
          context: "./bats"
          labels: "${{ steps.docker_meta.outputs.labels }}"
          push: 'true'
          tags: "${{ steps.docker_meta.outputs.tags }}"
      - name: Image digest
        run: |
          echo "${{ steps.docker_push.outputs.digest }}"
      - name: Container structure test
        uses: docker://gcr.io/gcp-runtimes/container-structure-test:v1.10.0
        with:
          args: "test --pull --image ghcr.io/socialgouv/docker/bats@${{ steps.docker_push.outputs.digest }} --config bats/tests/container-structure-test.yml -v debug"
  integration_test:
    name: Integration test
    needs:
      - Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        options: |2
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
        ports:
          - "5432:5432"
    steps:
      - uses: "actions/checkout@v2"
      - run: yarn --frozen-lockfile --prefer-offline
      - run: make e2e
        working-directory: bats
  lint:
    container: hadolint/hadolint:v1.22.1-alpine
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - run: hadolint ./Dockerfile
        working-directory: bats
  version_test:
    container: "docker://ghcr.io/socialgouv/docker/bats:sha-${{ github.sha }}"
    name: Test Version
    needs:
      - Build
    runs-on: ubuntu-latest
    steps:
      - run: bats --version
name: "azure-cli (main)"
on:
  push:
    branches:
      - master
      - next
      - next-major
      - beta
      - alpha
      - "+([0-9])?(.{+([0-9]),x}).x"
