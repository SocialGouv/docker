name: CUrl

on:
  push:
  pull_request:
    paths:
      - .github/workflows/curl.yaml
      - curl/**
  workflow_dispatch:

defaults:
  run:
    shell: bash
    working-directory: curl

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: brpaz/hadolint-action@v1.2.1
        with:
          dockerfile: ./curl/Dockerfile

  Build:
    runs-on: ubuntu-latest
    needs: Lint
    outputs:
      digest: ${{ steps.docker_meta.outputs.version }}
    steps:
      - uses: actions/checkout@v1

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ghcr.io/socialgouv/docker/curl
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
          tag-sha: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Login to Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          password: ${{ secrets.GHCR_REGISTRY_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build
        if: ${{ github.event_name == 'pull_request' }}
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: ./curl
          labels: ${{ steps.docker_meta.outputs.labels }}
          outputs: type=docker,dest=/tmp/image.tar
          tags: socialgouv/docker/curl:${{ github.sha }}

      - name: Upload artifact
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/upload-artifact@v2
        with:
          name: curl-image
          path: /tmp/image.tar

      - name: Image digest
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo "${{ steps.docker_build.outputs.digest }}"
          echo "${{ steps.docker_meta.outputs.version }}"
          echo "${{ steps.docker_meta.outputs.tags }}"
          echo "${{ steps.docker_meta.outputs.labels }}"

      - name: Push
        if: ${{ github.event_name != 'pull_request' }}
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: ./curl
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Image digest
        run: |
          echo "${{ steps.docker_push.outputs.digest }}"

  test:
    name: Test
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs:
     - Build
    container:
      image: docker://ghcr.io/socialgouv/docker/curl:${{ github.sha }}
    steps:
      - run: |
          curl --version

  test_artifact:
    name: Test (artifact)
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: curl-image
          path: /tmp
      -
        name: Load Docker image
        run: |
          docker load --input /tmp/image.tar
          docker image ls -a
      - uses: addnab/docker-run-action@v2
        with:
          image: socialgouv/docker/curl:${{ github.sha }}
          run: |
            curl --version
