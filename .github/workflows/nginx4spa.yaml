name: nginx4spa

on:
  push:
    paths:
      - .github/workflows/nginx4spa.yaml
      - nginx4spa/**
  workflow_dispatch:

jobs:
  Lint:
    runs-on: ubuntu-latest
    container:
      image: hadolint/hadolint:v1.19.0-alpine
    steps:
      - uses: actions/checkout@v2
      - run: hadolint ./Dockerfile
        working-directory: nginx4spa

  Build:
    runs-on: ubuntu-latest
    needs:
      - Lint
    outputs:
      digest: ${{ steps.docker_meta.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: |
            ghcr.io/socialgouv/docker/nginx4spa
          label-custom: |
            org.opencontainers.image.title=NGINX for SPA
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
          tag-sha: true
          tag-custom: sha-${{ github.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Login to Registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.SOCIALGROOVYBOT_NAME }}
          password: ${{ secrets.GHCR_REGISTRY_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Push
        id: docker_push
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: ./nginx4spa
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}

      - name: Image digest
        run: |
          echo "${{ steps.docker_push.outputs.digest }}"

  Test:
    runs-on: ubuntu-latest
    needs:
      - Build
    steps:

      - name: Install bats-core
        run: |
          git clone -b 'v1.2.1' --single-branch --depth 1 https://github.com/bats-core/bats-core.git /tmp/bats-core
          sudo /tmp/bats-core/install.sh /usr/local

      - name: Install bats extras
        run: |
          sudo git clone -b 'v0.3.0' --single-branch --depth 1 https://github.com/bats-core/bats-assert.git /usr/lib/bats-assert
          sudo git clone -b 'v0.3.0' --single-branch --depth 1 https://github.com/bats-core/bats-support.git /usr/lib/bats-support

      - name: Pull image
        run: docker pull docker://ghcr.io/socialgouv/docker/nginx4spa:sha-${{ github.sha }}
      - uses: actions/checkout@v2

      - run: bats test -t
        env:
          CI_REGISTRY_IMAGE: docker://ghcr.io/socialgouv/docker/nginx4spa
          IMAGE_TAG: sha-${{ github.sha }}
        working-directory: nginx4spa

      - run: docker stop nginx4spa_test || true
        if: always()
