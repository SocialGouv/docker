concurrency:
  cancel-in-progress: true
  group: "wait-for-postgres-${{ github.ref }}"
jobs:
  build:
    name: Build
    needs:
      - Lint
    outputs:
      digest: "${{ steps.docker_push.outputs.digest }}"
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - id: docker_meta
        uses: "crazy-max/ghaction-docker-meta@f6efe56d565add159ad605568120f5b22712a870"
        with:
          images: ghcr.io/socialgouv/docker/wait-for-postgres
          labels: |
            org.opencontainers.image.title=wait-for-postgres
            org.opencontainers.image.documentation=https://github.com/SocialGouv/docker/tree/${{ github.sha }}/wait-for-postgres
          tags: |
            type=sha
            type=raw,value=sha-${{ github.sha }}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - id: docker_buildx
        name: Set up Docker Buildx
        uses: "docker/setup-buildx-action@abe5d8f79a1606a2d3e218847032f3f2b1726ab0"
        with: {}
      - if: "${{ github.event_name != 'pull_request' }}"
        name: Login to ghcr.io/socialgouv Registry
        uses: "docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9"
        with:
          password: "${{ secrets.GHCR_REGISTRY_TOKEN }}"
          registry: ghcr.io
          username: "${{ secrets.SOCIALGROOVYBOT_NAME }}"
      - id: docker_push
        name: Push
        uses: "docker/build-push-action@1bc1040caef9e604eb543693ba89b5bf4fc80935"
        with:
          builder: "${{ steps.docker_buildx.outputs.name }}"
          cache-from: type=gha
          cache-to: "type=gha,mode=max"
          context: "./wait-for-postgres"
          labels: "${{ steps.docker_meta.outputs.labels }}"
          push: 'true'
          tags: "${{ steps.docker_meta.outputs.tags }}"
      - name: Image digest
        run: |
          echo "${{ steps.docker_push.outputs.digest }}"
  integration_test:
    name: Integration test
    needs:
      - Build
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - run: yarn --frozen-lockfile --prefer-offline
      - run: make e2e
        working-directory: wait-for-postgres
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - uses: "docker://ghcr.io/hadolint/hadolint:2.4.0@sha256:ed22c9de9b884383094edb8930696a256c4450335945c68153d8fc8fbb27bf03"
        with:
          args: hadolint ./wait-for-postgres/Dockerfile
  security_scan:
    name: Vulnerability Scanner
    needs:
      - Build
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v2"
      - run: "docker pull ghcr.io/socialgouv/docker/wait-for-postgres:sha-${{ github.sha }}"
      - name: Run Trivy vulnerability scanner
        uses: "aquasecurity/trivy-action@dba83feec810c70bacbc4bead308ae1e466c572b"
        with:
          image-ref: "ghcr.io/socialgouv/docker/wait-for-postgres:sha-${{ github.sha }}"
      - name: Export Trivy Results as sarif
        uses: "aquasecurity/trivy-action@dba83feec810c70bacbc4bead308ae1e466c572b"
        with:
          format: template
          image-ref: "ghcr.io/socialgouv/docker/wait-for-postgres:sha-${{ github.sha }}"
          output: trivy-results.sarif
          template: "@/contrib/sarif.tpl"
      - name: Change hardcoded Dockerfile path
        run: "sed -i 's/\"uri\": \"Dockerfile\"/\"uri\": \"wait-for-postgres\\/Dockerfile\"/' trivy-results.sarif"
      - uses: "github/codeql-action/upload-sarif@9a866ed4524fc3422c3af1e446dab8efa3503411"
        with:
          sarif_file: trivy-results.sarif
  version_test:
    container: "docker://ghcr.io/socialgouv/docker/wait-for-postgres:sha-${{ github.sha }}"
    name: Test Version
    needs:
      - Build
    runs-on: ubuntu-latest
    steps:
      - run: psql --version
      - run: which wait-for-postgres
name: "wait-for-postgres (main)"
on:
  push:
    branches:
      - master
      - next
      - next-major
      - beta
      - alpha
      - "+([0-9])?(.{+([0-9]),x}).x"
    tags:
      - "v*"
