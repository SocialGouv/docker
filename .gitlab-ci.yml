
include:
  - /git-deploy/.gitlab-ci.yml

#

.base_register_stage:
  image: docker:18
  services:
    - docker:18-dind
  before_script:
    - echo "${CI_JOB_TOKEN}" | docker login ${CI_REGISTRY} -u gitlab-ci-token --password-stdin
  script:
    - >
      if [[ -n "${CI_COMMIT_TAG}" ]]; then
        export TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
      else
        export TAG=${CI_COMMIT_REF_SLUG}
      fi
    #
    - docker pull ${IMAGE_NAME}:${CI_COMMIT_BEFORE_SHA} || true
    - docker pull ${IMAGE_NAME}:${TAG} || true
    - docker pull ${IMAGE_NAME}:master || true
    - echo ">  docker build ${DOCKER_BUILD_ARGS} --cache-from ${IMAGE_NAME}:${CI_COMMIT_BEFORE_SHA} --cache-from ${IMAGE_NAME}:$TAG --cache-from ${IMAGE_NAME}:master -t ${IMAGE_NAME}:$CI_COMMIT_SHA -t ${IMAGE_NAME}:${TAG} ${CONTEXT}"
    - docker build ${DOCKER_BUILD_ARGS} --cache-from ${IMAGE_NAME}:${CI_COMMIT_BEFORE_SHA} --cache-from ${IMAGE_NAME}:$TAG --cache-from ${IMAGE_NAME}:master -t ${IMAGE_NAME}:$CI_COMMIT_SHA -t ${IMAGE_NAME}:${TAG} ${CONTEXT}
    - docker push ${IMAGE_NAME}:${CI_COMMIT_SHA}
    - docker push ${IMAGE_NAME}:${TAG}

#

variables:
  DOCKER_VERSION: "18"
  KUBECTL_VERSION: "1.0"
  GIT_DEPLOY_VERSION: "1.0"
  GIT_TAG_RELEASE_VERSION: "1.0"
  HELM_VERSION: "1.3"
  CURL_VERSION: "1.0"
  INFRA_ANSIBLE_CI_VERSION: "1.0"

.register_image_stage: &register_image_stage
  image: docker:18
  variables:
    DOCKER_HOST: tcp://localhost:2375
  only:
    - master
  services:
  - docker:18-dind
  before_script:
  - docker login  $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN


stages:
- "Build Docker Images & Push To Registry"
- "Build"
- "Test"
- "Release"

build_and_push_kube_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd kubectl
  - docker build -t "$CI_REGISTRY_IMAGE/kubectl:$KUBECTL_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/kubectl:$KUBECTL_VERSION"


build_and_push_infra_ansible_ci_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd infra-ansible-ci
  - docker build -t "$CI_REGISTRY_IMAGE/infra-ansible-ci:$INFRA_ANSIBLE_CI_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/infra-ansible-ci:$INFRA_ANSIBLE_CI_VERSION"

build_and_push_helm_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd helm
  - docker build -t "$CI_REGISTRY_IMAGE/helm:$HELM_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/helm:$HELM_VERSION"


build_and_push_curl_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd curl
  - docker build -t "$CI_REGISTRY_IMAGE/curl:$CURL_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/curl:$CURL_VERSION"


build_and_push_git_tag_release_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd git-tag-release
  - docker build -t "$CI_REGISTRY_IMAGE/git-tag-release:$GIT_TAG_RELEASE_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/git-tag-release:$GIT_TAG_RELEASE_VERSION"

