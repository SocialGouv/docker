variables:
  KUBECTL_VERSION: "1.0"
  GIT_DEPLOY_VERSION: "1.0"
  GIT_TAG_RELEASE_VERSION: "1.0"
  HELM_VERSION: "1.1"
  CURL_VERSION: "1.0"
  INFRA_ANSIBLE_CI_VERSION: "1.0"

.register_image_stage: &register_image_stage
  image: docker:18
  variables:
    DOCKER_HOST: tcp://localhost:2375
  services:
  - docker:18-dind
  before_script:
  - docker login  $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN


stages:
- "Build Docker Images & Push To Registry"

build_and_push_kube_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd kubectl
  - docker build -t "$CI_REGISTRY_IMAGE/kubectl:$KUBECTL_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/kubectl:$KUBECTL_VERSION"
  only:
  - master

build_and_push_infra_ansible_ci_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd infra-ansible-ci
  - docker build -t "$CI_REGISTRY_IMAGE/infra-ansible-ci:$INFRA_ANSIBLE_CI_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/infra-ansible-ci:$INFRA_ANSIBLE_CI_VERSION"
  only:
  - master

build_and_push_git_deploy_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd git-deploy
  - docker build -t "$CI_REGISTRY_IMAGE/git-deploy:$GIT_DEPLOY_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/git-deploy:$GIT_DEPLOY_VERSION"
  only:
  - master

build_and_push_helm_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd helm
  - docker build -t "$CI_REGISTRY_IMAGE/helm:$HELM_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/helm:$HELM_VERSION"
  only:
  - master

build_and_push_curl_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd curl
  - docker build -t "$CI_REGISTRY_IMAGE/curl:$CURL_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/curl:$CURL_VERSION"
  only:
  - master

build_and_push_git_tag_release_docker_image:
  stage: "Build Docker Images & Push To Registry"
  <<: *register_image_stage
  script:
  - cd git-tag-release
  - docker build -t "$CI_REGISTRY_IMAGE/git-tag-release:$GIT_TAG_RELEASE_VERSION" .
  - docker push "$CI_REGISTRY_IMAGE/git-tag-release:$GIT_TAG_RELEASE_VERSION"
  only:
  - master
