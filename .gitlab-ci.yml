include:
  - project: SocialGouv/gitlab-ci-yml
    file: /base_semantic_release_stage.yml
    ref: v7.1.0
  - project: SocialGouv/gitlab-ci-yml
    file: /base_register_stage.yml
    ref: v7.1.0
  #
  - /pg-cleaner/.gitlab-ci.yml
  - /curl/.gitlab-ci.yml
  - /git-deploy/.gitlab-ci.yml
  - /git-tag-release/.gitlab-ci.yml
  - /helm/.gitlab-ci.yml
  - /infra-ansible-ci/.gitlab-ci.yml
  - /k8s-ns-killer/.gitlab-ci.yml
  - /k8s-object-cleaner/.gitlab-ci.yml
  - /kubectl/.gitlab-ci.yml
  - /nginx4spa/.gitlab-ci.yml
  - /puppetteer/.gitlab-ci.yml
  - /wait-for-postgres/.gitlab-ci.yml

#

variables:
  # CI variables
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  GIT_STRATEGY: fetch

.register_image_stage: &register_image_stage
  image: docker:18
  variables:
    DOCKER_HOST: tcp://localhost:2375
  only:
    - master
  services:
    - docker:18-dind
  before_script:
    - docker login  $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN

stages:
  - "Quality"
  - "Build"
  - "Test"
  - "Release"
  - "Publish"

#

Release:
  extends: .base_semantic_release_stage
  variables:
    SEMANTIC_RELEASE_PLUGINS: "@semantic-release/changelog @semantic-release/exec @semantic-release/git"

#

.base_publish_to_github_stage:
  stage: "Publish"
  only:
    - tags
  image: docker:18
  services:
    - docker:18-dind
  script:
    - echo "${GITHUB_REGISTRY_TOKEN}" | docker login docker.pkg.github.com -u SocialGroovyBot --password-stdin
    - export TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
    - docker pull ${CI_REGISTRY}/${IMAGE_NAME}:${TAG}
    - docker tag ${CI_REGISTRY}/${IMAGE_NAME}:${TAG} docker.pkg.github.com/${IMAGE_NAME}:${TAG}
    - docker push docker.pkg.github.com/${IMAGE_NAME}:${TAG}

.base_register_to_gitlab_stage:
  extends: .base_register_stage
