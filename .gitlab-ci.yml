include:
  - /curl/.gitlab-ci.yml
  - /git-deploy/.gitlab-ci.yml
  - /git-tag-release/.gitlab-ci.yml
  - /helm/.gitlab-ci.yml
  - /k8s-ns-killer/.gitlab-ci.yml
  - /kubectl/.gitlab-ci.yml
  - /nginx4spa/.gitlab-ci.yml

#

variables:
  # CI variables
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://localhost:2375
  GIT_STRATEGY: fetch

  KUBECTL_VERSION: "1.15"
  GIT_DEPLOY_VERSION: "1.0"
  GIT_TAG_RELEASE_VERSION: "1.0"
  HELM_VERSION: "1.3"
  CURL_VERSION: "1.0"
  INFRA_ANSIBLE_CI_VERSION: "1.0"

.register_image_stage: &register_image_stage
  image: docker:18
  variables:
    DOCKER_HOST: tcp://localhost:2375
  only:
    - master
  services:
    - docker:18-dind
  before_script:
    - docker login  $CI_REGISTRY -u gitlab-ci-token -p $CI_JOB_TOKEN

stages:
  - "Quality"
  - "Build"
  - "Test"
  - "Release"
  - "Publish"

#

Release:
  stage: "Release"
  image: node:12
  only:
    - master
  when: manual
  variables:
    GIT_AUTHOR_EMAIL: 45039513+SocialGroovyBot@users.noreply.github.com
    GIT_AUTHOR_NAME: Social Groovy Bot
    GIT_COMMITTER_EMAIL: $GIT_AUTHOR_EMAIL
    GIT_COMMITTER_NAME: $GIT_AUTHOR_NAME
  cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"
    paths:
      - $CI_PROJECT_DIR/.yarn
  before_script:
    - git checkout ${CI_COMMIT_REF_NAME}
    - git config user.name "Social Groovy Bot"
    - git config user.email "45039513+SocialGroovyBot@users.noreply.github.com"
    - git remote set-url origin https://${GITHUB_TOKEN}@github.com/${CI_PROJECT_PATH}.git
  script:
    - yarn config set cache-folder $CI_PROJECT_DIR/.yarn
    - yarn global add semantic-release @semantic-release/changelog @semantic-release/git
    - semantic-release

#

.base_publish_to_github_stage:
  stage: "Publish"
  allow_failure: true # We are in the waiting list of the beta version...
  only:
    - tags
  image: docker:18
  services:
    - docker:18-dind
  before_script:
    - echo "${GITHUB_REGISTRY_TOKEN}" | docker login docker.pkg.github.com -u SocialGroovyBot --password-stdin
  script:
    - export TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
    - docker pull ${CI_REGISTRY}/${IMAGE_NAME}:${TAG}
    - docker tag ${CI_REGISTRY}/${IMAGE_NAME}:${TAG} docker.pkg.github.com/${IMAGE_NAME}:${TAG}
    - docker push docker.pkg.github.com/${IMAGE_NAME}:${TAG}

.base_register_to_gitlab_stage:
  image: docker:18
  services:
    - docker:18-dind
  before_script:
    - echo "${CI_JOB_TOKEN}" | docker login ${CI_REGISTRY} -u gitlab-ci-token --password-stdin
  script:
    - >
      if [[ -n "${CI_COMMIT_TAG}" ]]; then
        export TAG=$(printf "${CI_COMMIT_TAG}" | sed "s/^v//")
      else
        export TAG=${CI_COMMIT_REF_SLUG}
      fi
    #
    - docker pull ${IMAGE_NAME}:${CI_COMMIT_BEFORE_SHA} || true
    - docker pull ${IMAGE_NAME}:${TAG} || true
    - docker pull ${IMAGE_NAME}:master || true
    - echo ">  docker build ${DOCKER_BUILD_ARGS} --cache-from ${IMAGE_NAME}:${CI_COMMIT_BEFORE_SHA} --cache-from ${IMAGE_NAME}:$TAG --cache-from ${IMAGE_NAME}:master -t ${IMAGE_NAME}:$CI_COMMIT_SHA -t ${IMAGE_NAME}:${TAG} ${CONTEXT}"
    - docker build ${DOCKER_BUILD_ARGS} --cache-from ${IMAGE_NAME}:${CI_COMMIT_BEFORE_SHA} --cache-from ${IMAGE_NAME}:$TAG --cache-from ${IMAGE_NAME}:master -t ${IMAGE_NAME}:$CI_COMMIT_SHA -t ${IMAGE_NAME}:${TAG} ${CONTEXT}
    - docker push ${IMAGE_NAME}:${CI_COMMIT_SHA}
    - docker push ${IMAGE_NAME}:${TAG}
#
