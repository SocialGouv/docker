Lint azure-db:
  stage: "Quality"
  image: hadolint/hadolint:v1.17.2-debian
  script:
    - hadolint ./azure-db/Dockerfile

Build azure-db:
  stage: "Build"
  needs:
    - Lint azure-db
  extends: .base_register_to_gitlab_stage
  variables:
    CONTEXT: azure-db
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/azure-db

Test azure-db 1:
  stage: "Test"
  needs:
    - Lint azure-db
    - Build azure-db
  image: "${CI_REGISTRY_IMAGE}/azure-db:${CI_COMMIT_SHA}"
  script:
    - psql --version
    - az --version
    #
    - which create-db-user
    - which drop-db-user
    - which backup

Test azure-db 2:
  stage: "Test"
  services:
    - docker:18-dind
    - postgres:11.5-alpine
  needs:
    - Lint azure-db
    - Build azure-db
  image: docker:18
  variables:
    # for PG service
    POSTGRES_USER: custom_user
    POSTGRES_PASSWORD: custom_pass
    # For azure-db scripts
    NEW_DB_NAME: test_db_${CI_JOB_ID}
    NEW_USER: test_user_${CI_JOB_ID}
    NEW_PASSWORD: test_pass_${CI_JOB_ID}
    DROP_USER: test_user_${CI_JOB_ID}
    DROP_DATABASE: test_db_${CI_JOB_ID}
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/azure-db:${CI_COMMIT_SHA}
    #
    - echo "create db and user on PG service"
    - docker run
        --env NEW_DB_EXTENSIONS="pgcrypto"
        --env NEW_DB_NAME=${NEW_DB_NAME}
        --env NEW_PASSWORD=${NEW_PASSWORD}
        --env NEW_USER=${NEW_USER}
        --env PGHOST=localhost
        --env PGPASSWORD=${POSTGRES_PASSWORD}
        --env PGUSER=${POSTGRES_USER}
        --network="host"
        --rm
      ${CI_REGISTRY_IMAGE}/azure-db:${CI_COMMIT_SHA} create-db-user
    #
    - docker run
        --detach
        --env HASURA_GRAPHQL_DATABASE_URL=postgres://${NEW_USER}:${NEW_PASSWORD}@localhost:5432/${NEW_DB_NAME}
        --env HASURA_GRAPHQL_ADMIN_SECRET=secret
        --name hasura_test
        --network="host"
        --publish 8080:8080
        --rm
      hasura/graphql-engine:v1.1.0
    - |-
      retry=25;
      while
        ! wget -q --spider "localhost:8080/v1/version" &&
        [[ $(( retry-- )) -gt 0 ]];
      do echo "Waiting for Hasura ($retry)" ; sleep 1 ; done
    #
    - docker ps
    - docker logs hasura_test
    - wget -qO-localhost:8080/v1/version
    #
    - wget -qO- localhost:8080/healthz
    - wget -qO- localhost:8080/healthz | grep "OK"
  after_script:
    - docker logs hasura_test || true
    - docker stop hasura_test || true

Publish azure-db to Github Registry:
  extends: .base_publish_to_github_stage
  needs:
    - Lint azure-db
    - Build azure-db
    - Test azure-db 1
    - Test azure-db 2
  variables:
    IMAGE_NAME: socialgouv/docker/azure-db
