.change_rules_helm:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - &changes_helm
      changes:
        - .gitlab-ci.yml
        - helm/**/*

Lint helm:
  stage: "Quality"
  extends: .change_rules_helm
  image: hadolint/hadolint:v1.18.2-debian
  script:
    - hadolint ./helm/Dockerfile

Build helm:
  stage: "Build"
  needs:
    - Lint helm
  extends:
    - .base_register_to_gitlab_stage
    - .change_rules_helm
  before_script:
    # NODE(douglasduteil): build from renovate maintaining package.json
    # To allow renovate to maintaining the socialgouv/docker/helm image
    # we use a fake `package.json` that link to the repo we need to follow.
    # The script below allow will build the version present in that file.
    - apk add --no-cache jq
    - HELM_CHART_VERSION=$(
      cat ./helm/package.json |
      jq '.dependencies["@socialgouv/helm-charts"]' |
      grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+'
      )
    - DOCKER_BUILD_ARGS="--build-arg HELM_CHART_VERSION=${HELM_CHART_VERSION}"
  variables:
    CONTEXT: helm
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/helm

Test helm:
  stage: "Test"
  extends: .change_rules_helm
  needs:
    - Lint helm
    - Build helm
  image: "${CI_REGISTRY_IMAGE}/helm:${CI_COMMIT_SHA}"
  environment: feature-dev2
  script:
    - bats --version
    - helm version
    - kubectl version
    - kustomize version
    #
    - helm list
    #
    # Test that we can fetch the latest version
    #
    - echo "https://github.com/SocialGouv/helm-charts/releases/tag/v${HELM_CHART_VERSION}"
    - helm just fetch "socialgouv/app#${HELM_CHART_VERSION}"
    - test -d ./.charts
    - test -d ./.charts/app
    - test -f ./.charts/app/Chart.yaml
    - "grep 'version: '${HELM_CHART_VERSION} ./.charts/app/Chart.yaml"

Publish helm to Github Registry:
  extends: .base_publish_to_github_stage
  rules:
    - <<: *changes_helm
      if: "$CI_COMMIT_TAG"
  needs:
    - Lint helm
    - Test helm
    - Build helm
  variables:
    IMAGE_NAME: socialgouv/docker/helm
