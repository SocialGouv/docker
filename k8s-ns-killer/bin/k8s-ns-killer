#!/usr/bin/env bash

{

get_namespaces_and_branches () {
  BRANCH_ANNOTATION=${BRANCH_ANNOTATION:="git/branch"}

  kubectl get namespaces \
    --no-headers \
    -o custom-columns=":metadata.name,:metadata.annotations['${BRANCH_ANNOTATION}']" \
    | tr -s ' ' \
    | grep "${1:-''}" \
    | sort
}

get_namespaces_and_branches_and_remote () {
  REMOTE_ANNOTATION=${REMOTE_ANNOTATION:="git/remote"}
  BRANCH_ANNOTATION=${BRANCH_ANNOTATION:="git/branch"}

  kubectl get namespaces \
    --no-headers \
    -o custom-columns=":metadata.name,:metadata.annotations['${BRANCH_ANNOTATION}'],:metadata.annotations['${REMOTE_ANNOTATION}']" \
    | tr -s ' '  \
    | sort
}

remove_namespace_branch_remote () {
  local namespace=${1}
  local branch=${2}
  local remote=${3}

  { [ -z "${remote}" ] || [ "${remote}" = "<none>" ]; } && return 0
  { [ -z "${branch}" ] || [ "${branch}" = "<none>" ]; } && return 0
  git ls-remote --exit-code --heads "${remote}" "${branch}" > /dev/null && return 0

  echo ""
  echo "Removing namespace ${namespace} from"
  echo -e "  - ${remote}\n  - ${branch}\n"
  kubectl delete namespaces "$namespace"
}

local_ns_killer() {
  local namespace_filter="${1}"

  REPOSITORY=${REPOSITORY:=$(git remote get-url origin)}

  get_namespaces_and_branches "${namespace_filter}" > /tmp/k8s_namespaces
  cat /tmp/k8s_namespaces

  while IFS="" read -r namespace_branch || [ -n "${namespace_branch}" ]
  do
    namespace=$(echo "$namespace_branch" | cut -d" " -f1)
    branch=$(echo "$namespace_branch" | cut -d" " -f2)

    remove_namespace_branch_remote "${namespace}" "${branch}" "${REPOSITORY}"
  done < /tmp/k8s_namespaces
}

global_ns_killer() {
  get_namespaces_and_branches_and_remote > /tmp/k8s_namespaces
  # cat /tmp/k8s_namespaces

  while IFS="" read -r namespace_branch || [ -n "${namespace_branch}" ]
  do
    namespace=$(echo "$namespace_branch" | cut -d" " -f1)
    branch=$(echo "$namespace_branch" | cut -d" " -f2)
    remote=$(echo "$namespace_branch" | cut -d" " -f3)

    remove_namespace_branch_remote "${namespace}" "${branch}" "${remote}"
  done < /tmp/k8s_namespaces
}

k8s_ns_killer () {
  local namespace_filter="${1:-''}"

  if [[ -n "$namespace_filter" ]]; then
    local_ns_killer "$namespace_filter"
  else
    global_ns_killer
  fi
}

k8s_ns_killer "$@"

}
