.change_rules_kubectl:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - &changes_kubectl
      changes:
        - kubectl/**/*

Lint kubectl:
  stage: "Quality"
  extends: .change_rules_kubectl
  image: hadolint/hadolint:v1.18.0-debian
  script:
    - hadolint ./kubectl/Dockerfile

Build kubectl:
  stage: "Build"
  needs:
    - Lint kubectl
  extends:
    - .base_register_to_gitlab_stage
    - .change_rules_kubectl
  variables:
    CONTEXT: kubectl
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/kubectl

Test kubectl 1 2:
  stage: "Test"
  extends: .change_rules_kubectl
  needs:
    - Lint kubectl
    - Build kubectl
  image: "${CI_REGISTRY_IMAGE}/kubectl:${CI_COMMIT_SHA}"
  environment: feature-dev2
  script:
    - kubectl version
    - kubectl cluster-info
    - kustomize version
    #
    - "[[ $(kubectl version) ]] && echo '[[ <test> ]] && <struff>' should be supported"
    - envsubst --version

Test kubectl 2 2:
  stage: "Test"
  extends: .change_rules_kubectl
  needs:
    - Lint kubectl
    - Build kubectl
  image: docker:19
  services:
    - docker:19-dind
  script:
    - docker run --rm ${CI_REGISTRY_IMAGE}/kubectl:${CI_COMMIT_SHA} version --client
    #
    # NOTE(douglasduteil): do not try to mount `/tmp` in dind...
    # https://gitlab.com/gitlab-org/gitlab-foss/issues/41227
    - mkdir -p ${CI_PROJECT_DIR}/init.d
    - echo "export FOO=BAR" > ${CI_PROJECT_DIR}/init.d/foo.sh
    #
    - docker run
      --entrypoint sh
      --rm
      --volume ${CI_PROJECT_DIR}/init.d:/home/kubectl/profile.d
      ${CI_REGISTRY_IMAGE}/kubectl:${CI_COMMIT_SHA}
      -c "
      source /home/kubectl/profile.d/foo.sh ;
      echo FOO=\$FOO | grep FOO=BAR"

Publish kubectl to Github Registry:
  extends: .base_publish_to_github_stage
  rules:
    - <<: *changes_kubectl
      if: "$CI_COMMIT_TAG"
  needs:
    - Lint kubectl
    - Build kubectl
  variables:
    IMAGE_NAME: socialgouv/docker/kubectl
