.change_rules_wait_for_http:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - &changes_wait_for_http
      changes:
        - wait-for-http/**/*

Lint wait-for-http:
  stage: "Quality"
  extends: .change_rules_wait_for_http
  image: hadolint/hadolint:v1.22.1-debian
  script:
    - hadolint ./wait-for-http/Dockerfile

Build wait-for-http:
  stage: "Build"
  extends:
    - .base_register_to_gitlab_stage
    - .change_rules_wait_for_http
  needs:
    - Lint wait-for-http
  variables:
    CONTEXT: wait-for-http
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/wait-for-http

Test wait-for-http 1:
  needs:
    - Lint wait-for-http
    - Build wait-for-http
  stage: "Test"
  extends: .change_rules_wait_for_http
  image:
    name: "${CI_REGISTRY_IMAGE}/wait-for-http:${CI_COMMIT_SHA}"
    entrypoint: ["/bin/sh"]
  variables:
    WAIT_FOR_RETRIES: 1
  
  # expect wait to fail and a retry duration >= 5secs (1*5)
  script: |
    start=`date +%s`
    (
      /bin/wait-for-http http://invalid && echo "Should not fail" && exit 1 
    ) || true
    end=`date +%s`
    runtime=$((end-start))
    [[ $runtime -ge 5 ]] || ( 
      echo "Should wait ~5 secs (actual $runtime)" && exit 1 
    ) 

# test CLI param usage
Test wait-for-http 2:
  needs:
    - Lint wait-for-http
    - Build wait-for-http
  stage: "Test"
  extends: .change_rules_wait_for_http
  image:
    name: "${CI_REGISTRY_IMAGE}/wait-for-http:${CI_COMMIT_SHA}"
    entrypoint: ["/bin/sh"]
  script:
    - /bin/wait-for-http http://free.fr

# test URL env variable usage
Test wait-for-http 3:
  needs:
    - Lint wait-for-http
    - Build wait-for-http
  stage: "Test"
  extends: .change_rules_wait_for_http
  image:
    name: "${CI_REGISTRY_IMAGE}/wait-for-http:${CI_COMMIT_SHA}"
    entrypoint: ["/bin/sh"]
  script:
    - /bin/wait-for-http http://free.fr

Publish wait-for-http to Github Registry:
  extends: .base_publish_to_github_stage
  rules:
    - <<: *changes_wait_for_http
      if: "$CI_COMMIT_TAG"
  needs:
    - Lint wait-for-http
    - Build wait-for-http
    - Test wait-for-http 1
    - Test wait-for-http 2
    - Test wait-for-http 3
  variables:
    IMAGE_NAME: socialgouv/docker/wait-for-http
