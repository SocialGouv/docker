.change_rules_wait_for_postgres:
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
    - &changes_wait_for_postgres
      changes:
        - .gitlab-ci.yml
        - wait-for-postgres/**/*

Lint wait-for-postgres 1 2:
  stage: "Quality"
  extends: .change_rules_wait_for_postgres
  image: hadolint/hadolint:v1.23.0-debian
  script:
    - hadolint ./wait-for-postgres/Dockerfile

Lint wait-for-postgres 2 2:
  stage: "Quality"
  extends: .change_rules_wait_for_postgres
  image: koalaman/shellcheck-alpine:v0.7.1
  script:
    - shellcheck ./wait-for-postgres/bin/wait-for-postgres

Build wait-for-postgres:
  stage: "Build"
  needs:
    - Lint wait-for-postgres 1 2
    - Lint wait-for-postgres 2 2
  extends:
    - .base_register_to_gitlab_stage
    - .change_rules_wait_for_postgres
  variables:
    CONTEXT: wait-for-postgres
    IMAGE_NAME: ${CI_REGISTRY_IMAGE}/wait-for-postgres

Test wait-for-postgres 1 2:
  stage: "Test"
  extends: .change_rules_wait_for_postgres
  needs:
    - Lint wait-for-postgres 1 2
    - Lint wait-for-postgres 2 2
    - Build wait-for-postgres
  image: "${CI_REGISTRY_IMAGE}/wait-for-postgres:${CI_COMMIT_SHA}"
  script:
    - psql --version
    - pg_isready --version

Test wait-for-postgres 2 2:
  stage: "Test"
  extends: .change_rules_wait_for_postgres
  needs:
    - Lint wait-for-postgres 1 2
    - Lint wait-for-postgres 2 2
    - Build wait-for-postgres
  image: docker:19
  services:
    - docker:19-dind
    - postgres:11.11-alpine
  variables:
    POSTGRES_PASSWORD: postgres
  script:
    - docker pull ${CI_REGISTRY_IMAGE}/wait-for-postgres:${CI_COMMIT_SHA}
    - docker run
      --env PGHOST=localhost
      --env PGPASSWORD=postgres
      --env PGUSER=postgres
      --env WAIT_FOR_INTERVAL=1s
      --env WAIT_FOR_RETRIES=1
      --network="host"
      --rm
      ${CI_REGISTRY_IMAGE}/wait-for-postgres:${CI_COMMIT_SHA}
    - docker run
      --env PGHOST=localhost
      --env PGPASSWORD=postgres
      --env PGPORT=5454
      --env PGUSER=postgres
      --env WAIT_FOR_INTERVAL=1s
      --env WAIT_FOR_RETRIES=1
      --network="host"
      --rm
      ${CI_REGISTRY_IMAGE}/wait-for-postgres:${CI_COMMIT_SHA} || true
    - docker run
      --env PGHOST=localhost
      --env PGPASSWORD=postgres
      --env PGUSER=foobar
      --env WAIT_FOR_INTERVAL=1s
      --env WAIT_FOR_RETRIES=1
      --network="host"
      --rm
      ${CI_REGISTRY_IMAGE}/wait-for-postgres:${CI_COMMIT_SHA} || true

Publish wait-for-postgres to Github Registry:
  extends: .base_publish_to_github_stage
  rules:
    - <<: *changes_wait_for_postgres
      if: "$CI_COMMIT_TAG"
  needs:
    - Build wait-for-postgres
  variables:
    IMAGE_NAME: socialgouv/docker/wait-for-postgres
